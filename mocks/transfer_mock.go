// Code generated by MockGen. DO NOT EDIT.
// Source: ./store/transfer/transfer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/patrickchagastavares/conta-corrent/model"
)

// MockTransferStore is a mock of Store interface.
type MockTransferStore struct {
	ctrl     *gomock.Controller
	recorder *MockTransferStoreMockRecorder
}

// MockTransferStoreMockRecorder is the mock recorder for MockTransferStore.
type MockTransferStoreMockRecorder struct {
	mock *MockTransferStore
}

// NewMockTransferStore creates a new mock instance.
func NewMockTransferStore(ctrl *gomock.Controller) *MockTransferStore {
	mock := &MockTransferStore{ctrl: ctrl}
	mock.recorder = &MockTransferStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransferStore) EXPECT() *MockTransferStoreMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTransferStore) Create(ctx context.Context, transfer *model.Transfer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, transfer)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTransferStoreMockRecorder) Create(ctx, transfer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTransferStore)(nil).Create), ctx, transfer)
}

// ListByID mocks base method.
func (m *MockTransferStore) ListByID(ctx context.Context, id int) ([]*model.Transfer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByID", ctx, id)
	ret0, _ := ret[0].([]*model.Transfer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByID indicates an expected call of ListByID.
func (mr *MockTransferStoreMockRecorder) ListByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByID", reflect.TypeOf((*MockTransferStore)(nil).ListByID), ctx, id)
}
